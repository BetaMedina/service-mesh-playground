kind: VirtualService
apiVersion: networking.istio.io/v1alpha3
metadata:
  name: price-api-virtual # Qualquer nome, escolha um que faz sentido para a regra
  namespace: default
spec:
  hosts:
    - price-api-svc.default.svc.cluster.local # O nome do k8s Service. Recomendado FQDN, mas pode ser abreviado se estiver no mesmo namespace do serviço
  http:
    - route:
        - destination:
            host: price-api-svc.default.svc.cluster.local # O endereço alvo. Podem ser diferentes
            subset: v1-set # Mesmo nome definido para o subset no DestinationRule para esse host
          weight: 90 # Em percentual, quantiade aproximada de requisições que vão para o subconjunto v1-set
        - destination:
            host: price-api-svc.default.svc.cluster.local # O endereço alvo. Não precisa ser o mesmo
            subset: v2-set # Mesmo nome definido para o subset no DestinationRule para esse host
          weight: 10 # por cento irá para o subconjunto v2-set
      match:
      - uri:
          prefix: "/health"
      rewrite:
        uri: "/metrics"  # Correção: agora redirecionando de /health para /metrics


#E a relação com o DestinationRule se dá pelo FQDN do host:
---
# Define quais PODs fazem parte de cada subconjunto (subset)
kind: DestinationRule
apiVersion: networking.istio.io/v1alpha3
metadata:
  name: price-api-destination # Qualquer nome.
  namespace: default
spec:
  host: price-api-svc.default.svc.cluster.local # k8s service name, FQDN ou abriaviado.
  subsets:
    - labels: # Seletor
        version: v1 # PODs do serviço price-api.default.svc.cluster.local com o label version: v1 fazem parte desse subconjunto
      name: v1-set # Qualquer nome, mas que represente o subconjunto.
    - labels: # Seletor
        version: v2 # Da mesma forma, PODs do mesmo serviço (host = k8s service) com o label version: v2 fazem parte desse subconjunto
      name: v2-set # Qualquer nome, mas que represente o subconjunto, nesse caso PODs da versao dois.

# kubectl exec fortio-deploy-956754996-f65x7 -- /usr/bin/fortio load -c 3 -qps 1000 -n 2000 -loglevel info http://10.101.37.166:8000/health